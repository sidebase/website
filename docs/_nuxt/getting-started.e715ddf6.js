import{a as n,o as e,b as a,e as l,f as d,h as r,i as t}from"./entry.1022588d.js";import{m as c,_ as o,B as p,C as g,a as x}from"./metaData.2676d444.js";const m={},v=l('<div class="mx-auto max-w-screen-xl px-4 lg:px-6 sm:py-8" data-v-82443d2b><div class="mb-8" data-v-82443d2b><a id="getting-started" href="#getting-started" class="group relative" data-v-82443d2b><div class="absolute top-[25px] left-[-30px] hidden group-hover:block" data-v-82443d2b><i class="fa fa-link text-sidebase-green-700 text-xl" data-v-82443d2b></i></div><h1 class="text-4xl font-extrabold text-white" data-v-82443d2b> Getting started with <span class="GradientText" data-v-82443d2b>sidebase</span></h1></a><p class="text-lg text-gray-400" data-v-82443d2b> Getting started with sidebase is super easy and fast! The easier way to get started is to use the official nuxi-cli to bootstrap a project based on sidebase. </p></div><section class="mt-5" data-v-82443d2b><div class="py-4" data-v-82443d2b><h1 class="text-xl text-gray-400" data-v-82443d2b> Use the official nuxi-cli to start: </h1><div class="flex items-center rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg" data-v-82443d2b><i class="fa fa-angle-right mr-2 text-red-400" data-v-82443d2b></i> npx nuxi@latest init -t community/sidebase </div></div><div class="py-4" data-v-82443d2b><h1 class="text-xl text-gray-400" data-v-82443d2b> Go into the nuxt-sidebase/ directory: </h1><div class="flex items-center rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg" data-v-82443d2b><i class="fa fa-angle-right mr-2 text-red-400" data-v-82443d2b></i> cd nuxt-sidebase </div></div><div class="py-4" data-v-82443d2b><h1 class="text-xl text-gray-400" data-v-82443d2b> Install the dependencies: </h1><div class="flex items-center rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg" data-v-82443d2b><i class="fa fa-angle-right mr-2 text-red-400" data-v-82443d2b></i> npm install </div></div><div class="py-4" data-v-82443d2b><h1 class="text-xl text-gray-400" data-v-82443d2b> Start developing (with database, backend, API, ... running) at <a href="http://localhost:3000" target="_blank" data-v-82443d2b>localhost:3000</a>: </h1><div class="flex items-center rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg" data-v-82443d2b><i class="fa fa-angle-right mr-2 text-red-400" data-v-82443d2b></i> npm run dev </div></div></section></div>',1),f=[v];function h(s,i){return e(),a("section",null,f)}const u=n(m,[["render",h],["__scopeId","data-v-82443d2b"]]),y={},b=l('<div class="mx-auto max-w-screen-xl px-4 lg:px-6 sm:py-6"><a id="commands" href="#commands" class="group relative"><div class="absolute top-[25px] left-[-30px] hidden group-hover:block"><i class="fa fa-link text-sidebase-green-700 text-xl"></i></div><h1 class="text-4xl font-extrabold text-white"> Commands </h1></a><section class="mt-5"><div class="py-4"><h1 class="text-xl text-gray-400"> Develop &amp; Debug the app: </h1><div class="rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg"><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm install <span class="text-gray-500 ml-4"># Install dependencies</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run dev <span class="text-gray-500 ml-4"># Start the fullstack app, including database</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run story <span class="text-gray-500 ml-4"># Start histoire for component story based development of UI</span></div></div></div><div class="py-4"><h1 class="text-xl text-gray-400"> Linting &amp; Formatting: </h1><div class="rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg"><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run lint <span class="text-gray-500 ml-4"># Run Eslint</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run lint:style <span class="text-gray-500 ml-4"># Eslint for formatting &amp; linting</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run lint:style -- --fix <span class="text-gray-500 ml-4"># Autofix styles and lints where possible</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run lint:types <span class="text-gray-500 ml-4"># typescript typechecking</span></div></div></div><div class="py-4"><h1 class="text-xl text-gray-400"> Testing &amp; Code Coverage &amp; Component Snapshots: </h1><div class="rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg"><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run test <span class="text-gray-500 ml-4"># Run tests once, report results and coverage </span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run test:watch <span class="text-gray-500 ml-4"># Run tests and watch file changes, run tests for changed files</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run test -- -u <span class="text-gray-500 ml-4"># Update component snapshots after components changed</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run test -- -t &quot;some test-text&quot; <span class="text-gray-500 ml-4"># Run all tests with some test-text in their test(...) description</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run test:ui <span class="text-gray-500 ml-4"># Run the vitest testing web UI for easier test interaction</span></div></div></div><div class="py-4"><h1 class="text-xl text-gray-400"> Building &amp; Deploying: </h1><div class="rounded-lg bg-gray-700 p-3 font-mono text-lg text-white shadow-lg"><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run build <span class="text-gray-500 ml-4"># Build the app for production</span></div><div class="flex items-center py-1"><i class="fa fa-angle-right mr-2 text-red-400"></i> npm run start <span class="text-gray-500 ml-4"># Start the app in production (requires npm run build beforehand)</span></div></div></div></section></div>',1),_=[b];function w(s,i){return e(),a("section",null,_)}const k=n(y,[["render",w]]),S={class:"WallpaperLight h-full w-full"},I=d({__name:"getting-started",setup(s){return r(c),(i,C)=>(e(),a("div",S,[t(o),t(p),t(u,{class:"sm:pt-10"}),t(k),t(g),t(x)]))}});export{I as default};
