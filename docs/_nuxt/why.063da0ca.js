import{a as d,o as e,b as t,e as o,f as r,h as n,i as a}from"./entry.1022588d.js";import{m as c,_ as l,B as h,C as b,a as v}from"./metaData.2676d444.js";const p={},u=o('<div class="mx-auto max-w-screen-xl py-8 px-4 sm:py-16 lg:px-6" data-v-1eacd8b2><div class="mb-8" data-v-1eacd8b2><h2 class="text-4xl font-extrabold text-white" data-v-1eacd8b2> Why should I use <span class="GradientText" data-v-1eacd8b2>sidebase</span>? </h2><p class="text-lg text-gray-400" data-v-1eacd8b2> sidebase is a production ready Nuxt3 starter template. Our primary goal when developing sidebase was to create a full-stack solution for any web application. As developers we know how valuable a good developer experience is, which is why we focused on incorporating modern tools that we love to use! </p></div><div class="grid border-t border-gray-700 pt-8 text-left md:grid-cols-2 md:gap-16" data-v-1eacd8b2><div data-v-1eacd8b2><div class="mb-10" data-v-1eacd8b2><h3 class="mb-4 flex items-center text-lg font-medium text-white" data-v-1eacd8b2><i class="fa fa-question-circle text-gray mr-2 text-gray-400" data-v-1eacd8b2></i> Which technologies are included in sidebase? </h3><p class="text-gray-400" data-v-1eacd8b2> During the development of sidebase, we experimented with a lot of different technologies. In the end we settled on the following stack: </p><ul class="TextBox list-inside list-disc text-gray-400" data-v-1eacd8b2><li data-v-1eacd8b2><a href="https://v3.nuxtjs.org/" target="_blank" data-v-1eacd8b2>Nuxt3</a> with <a href="https://vuejs.org/" target="_blank" data-v-1eacd8b2>Vue3</a> as the frontend</li><li data-v-1eacd8b2>Data base models, migrations, queries and easy DB-switching via <a href="https://typeorm.io/" target="_blank" data-v-1eacd8b2>TypeORM</a></li><li data-v-1eacd8b2>Frontend- and Backend data-transformation via <a href="https://nuxt-sidebase-parse.sidebase.io/index.html" target="_blank" data-v-1eacd8b2>nuxt-sidebase-parse</a> and <a href="https://github.com/colinhacks/zod" target="_blank" data-v-1eacd8b2>zod</a></li><li data-v-1eacd8b2>In-memory development SQL-database via <a href="https://www.sqlite.org/index.html" target="_blank" data-v-1eacd8b2>sqlite3</a></li><li data-v-1eacd8b2>Linting through <a href="https://eslint.org/" target="_blank" data-v-1eacd8b2>eslint</a></li><li data-v-1eacd8b2>Test management, Test UI, component snapshotting via <a href="https://vitest.dev/" target="_blank" data-v-1eacd8b2>vitest</a></li><li data-v-1eacd8b2>Component tests via <a href="https://testing-library.com/" target="_blank" data-v-1eacd8b2>test-library/vue</a></li><li data-v-1eacd8b2>API tests via <a href="https://github.com/visionmedia/supertest" target="_blank" data-v-1eacd8b2>supertest</a></li><li data-v-1eacd8b2>Code coverage via <a href="https://github.com/bcoe/c8" target="_blank" data-v-1eacd8b2>C8</a></li><li data-v-1eacd8b2>Component stories via <a href="https://histoire.dev/" target="_blank" data-v-1eacd8b2>histoire</a></li><li data-v-1eacd8b2>CSS utiltities via <a href="https://tailwindcss.com/" target="_blank" data-v-1eacd8b2>TailwindCSS</a></li><li data-v-1eacd8b2>CSS components via <a href="https://antdv.com/components/overview" target="_blank" data-v-1eacd8b2>Ant Design Vue</a></li><li data-v-1eacd8b2>Type checking in script and template via <a href="https://github.com/johnsoncodehk/volar" target="_blank" data-v-1eacd8b2>Volar / vue-tsc</a></li></ul></div><div class="mb-10" data-v-1eacd8b2><h3 class="mb-4 flex items-center text-lg font-medium text-white" data-v-1eacd8b2><i class="fa fa-question-circle text-gray mr-2 text-gray-400" data-v-1eacd8b2></i> How did you choose the technologies included in sidebase? </h3><p class="TextBox text-gray-400" data-v-1eacd8b2> When Nuxt3 began releasing their RCs, we at <a href="https://www.sidestream.tech/" target="_blank" data-v-1eacd8b2>SIDESTREAM</a> began working on an internal starter, we could use for our enterprise software solutions. After having used our internal starter in multiple products, we began thinking about releasing a public version, to help others jump into Nuxt3! Through our extensive experience with Nuxt, we collected a large library of packages and tooling, that we found helped speed up our work and improved our developer experience. <br data-v-1eacd8b2>If any packages are missing or you have any ideas, feel free to open a <a href="https://github.com/sidestream-tech/sidebase/discussions" target="_blank" data-v-1eacd8b2>discussion</a> in our GitHub! </p></div></div><div data-v-1eacd8b2><div class="mb-10" data-v-1eacd8b2><h3 class="mb-4 flex items-center text-lg font-medium text-white" data-v-1eacd8b2><i class="fa fa-question-circle text-gray mr-2 text-gray-400" data-v-1eacd8b2></i> What makes sidebase different from other starters? </h3><p class="text-gray-400" data-v-1eacd8b2> sidebase bootstraps a nuxt 3 project that permits developing a backend and a frontend using just Nuxt 3 with overarching TypeScript support. We want to show the world how enjoyable end-to-end typescript programming can be, displacing the myth that JS/TS-backends are no good. This starter solves a lot fo the &quot;real-world&quot; problems that occur after you start using Nuxt or any other framework: </p><ul class="list-inside list-disc text-gray-400" data-v-1eacd8b2><li data-v-1eacd8b2>How to write backend tests?</li><li data-v-1eacd8b2>How to write component tests?</li><li data-v-1eacd8b2>How to calculate test coverage?</li><li data-v-1eacd8b2>How to integrate a database?</li><li data-v-1eacd8b2>How to build a docker image?</li></ul><p class="text-gray-400" data-v-1eacd8b2> By answering all these questions, we provide a starter, that lets you skip the setup and jump to the coding, drastically increasing development time. </p></div><div class="mb-10" data-v-1eacd8b2><h3 class="mb-4 flex items-center text-lg font-medium text-white" data-v-1eacd8b2><i class="fa fa-question-circle text-gray mr-2 text-gray-400" data-v-1eacd8b2></i> What drove you to creating sidebase? </h3><p class="TextBox text-gray-400" data-v-1eacd8b2> While working on our internal starter for Nuxt3, we noticed how hard it was to make a full-stack starter, that meet all of your advanced requirements. The switch between Nuxt2 and Nuxt3 allowed us to try alternatives to the status quo such as using <a href="https://histoire.dev/" target="_blank" data-v-1eacd8b2>histoire</a> for vite powered component testing.<br data-v-1eacd8b2> Nuxt3 was also the first time we moved to a full-stack typescript setup, rather then using typescript in the frontend and another language for the backend. After finishing our first products we noticed how amazing full-stack typescript has become. By releasing sidebase, we hope to allow other developers to try out how amazing full-stack typescript applications have gotten! </p></div></div></div></div>',1),g=[u];function m(s,i){return e(),t("section",null,g)}const f=d(p,[["render",m],["__scopeId","data-v-1eacd8b2"]]),w={class:"WallpaperShiny h-full w-full"},k=r({__name:"why",setup(s){return n(c),(i,x)=>(e(),t("div",w,[a(l),a(h),a(f),a(b),a(v)]))}});export{k as default};
